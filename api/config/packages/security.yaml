security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        userprovider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        register:
            pattern:  ^/register
            stateless: true
            anonymous: true

#        main:
#            anonymous: ~
#            pattern:    ^/
#            http_basic: ~
#            provider: userprovider
#            form_login:
#                login_path: login
#                check_path: login
#            logout:
#                path:   /logout
#                target: /

        api:
            pattern: ^/api
            stateless: true
            anonymous: false
            provider: userprovider
            guard:
                authenticators:
                - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate

            # http_basic: ~
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # https://symfony.com/doc/current/security/form_login_setup.html

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }